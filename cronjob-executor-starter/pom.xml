<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>cn.horace.cronjob</groupId>
        <artifactId>cron-job</artifactId>
        <version>1.0.3</version>
    </parent>

    <artifactId>cronjob-executor-starter</artifactId>

    <name>cronjob-executor-starter</name>
    <description>Cron-Job cronjob-executor-starter, the executor is automatically configured in the spring boot environment
    </description>
    <url>https://cronjob.horace.cn</url>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Horace</name>
            <email>Horace_DH@163.com</email>
            <url>https://github.com/HoraceDH</url>
            <organization>Horace</organization>
            <organizationUrl>https://cronjob.horace.cn</organizationUrl>
        </developer>
    </developers>

    <scm>
        <tag>master</tag>
        <url>https://github.com/horacedh/cron-job.git</url>
        <connection>scm:git:https://github.com/horacedh/cron-job.git</connection>
        <developerConnection>scm:git:git@github.com:HoraceDH/cron-job.git</developerConnection>
    </scm>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <dependencies>
        <dependency>
            <groupId>cn.horace.cronjob</groupId>
            <artifactId>cronjob-executor</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
            <version>2.7.3</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.11.2</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.sonatype.central</groupId>
                <artifactId>central-publishing-maven-plugin</artifactId>
                <version>0.6.0</version>
                <extensions>true</extensions>
                <configuration>
                    <!-- 指定settings.xml中的serverId -->
                    <publishingServerId>maven-central</publishingServerId>
                </configuration>
            </plugin>
            <!--
            1、brew install gpg
            2、export GPG_TTY=$(tty)
            3、生成并分发任意一个keys到公钥服务器 https://central.sonatype.org/publish/requirements/gpg/#signing-a-file
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>3.2.7</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>