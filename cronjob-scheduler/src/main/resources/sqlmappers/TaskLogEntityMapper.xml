<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.horace.cronjob.scheduler.mappers.TaskLogEntityMapper">
  <resultMap id="BaseResultMap" type="cn.horace.cronjob.scheduler.entities.TaskLogEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="app_id" jdbcType="BIGINT" property="appId" />
    <result column="app_name" jdbcType="VARCHAR" property="appName" />
    <result column="app_desc" jdbcType="VARCHAR" property="appDesc" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="owner" jdbcType="VARCHAR" property="owner" />
    <result column="task_id" jdbcType="BIGINT" property="taskId" />
    <result column="executor_address" jdbcType="VARCHAR" property="executorAddress" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="exe_type" jdbcType="INTEGER" property="exeType" />
    <result column="elapsed_time" jdbcType="INTEGER" property="elapsedTime" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="cron" jdbcType="VARCHAR" property="cron" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
    <result column="router_strategy" jdbcType="INTEGER" property="routerStrategy" />
    <result column="expired_strategy" jdbcType="INTEGER" property="expiredStrategy" />
    <result column="expired_time" jdbcType="INTEGER" property="expiredTime" />
    <result column="failure_strategy" jdbcType="INTEGER" property="failureStrategy" />
    <result column="max_retry_count" jdbcType="INTEGER" property="maxRetryCount" />
    <result column="retry_count" jdbcType="INTEGER" property="retryCount" />
    <result column="failure_retry_interval" jdbcType="INTEGER" property="failureRetryInterval" />
    <result column="timeout" jdbcType="INTEGER" property="timeout" />
    <result column="scheduler_address" jdbcType="VARCHAR" property="schedulerAddress" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="task_params" jdbcType="VARCHAR" property="taskParams" />
    <result column="page" jdbcType="INTEGER" property="page" />
    <result column="total" jdbcType="INTEGER" property="total" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="execution_time" jdbcType="TIMESTAMP" property="executionTime" />
    <result column="dispatch_time" jdbcType="TIMESTAMP" property="dispatchTime" />
    <result column="real_execution_time" jdbcType="TIMESTAMP" property="realExecutionTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.horace.cronjob.scheduler.entities.TaskLogEntity">
    <result column="failed_reason" jdbcType="LONGVARCHAR" property="failedReason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, tenant_id, app_id, app_name, app_desc, name, owner, task_id, executor_address, 
    method, exe_type, elapsed_time, version, cron, tag, router_strategy, expired_strategy, 
    expired_time, failure_strategy, max_retry_count, retry_count, failure_retry_interval, 
    timeout, scheduler_address, state, task_params, page, total, parent_id, remark, execution_time, 
    dispatch_time, real_execution_time, create_time, modify_time
  </sql>
  <sql id="Blob_Column_List">
    failed_reason
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.horace.cronjob.scheduler.entities.TaskLogEntityExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_task_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.horace.cronjob.scheduler.entities.TaskLogEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_task_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_task_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_task_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.horace.cronjob.scheduler.entities.TaskLogEntityExample">
    delete from t_task_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.horace.cronjob.scheduler.entities.TaskLogEntity">
    insert into t_task_log (id, tenant_id, app_id, 
      app_name, app_desc, name, 
      owner, task_id, executor_address, 
      method, exe_type, elapsed_time, 
      version, cron, tag, 
      router_strategy, expired_strategy, expired_time, 
      failure_strategy, max_retry_count, retry_count, 
      failure_retry_interval, timeout, scheduler_address, 
      state, task_params, page, 
      total, parent_id, remark, 
      execution_time, dispatch_time, real_execution_time, 
      create_time, modify_time, failed_reason
      )
    values (#{id,jdbcType=BIGINT}, #{tenantId,jdbcType=BIGINT}, #{appId,jdbcType=BIGINT}, 
      #{appName,jdbcType=VARCHAR}, #{appDesc,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{owner,jdbcType=VARCHAR}, #{taskId,jdbcType=BIGINT}, #{executorAddress,jdbcType=VARCHAR}, 
      #{method,jdbcType=VARCHAR}, #{exeType,jdbcType=INTEGER}, #{elapsedTime,jdbcType=INTEGER}, 
      #{version,jdbcType=INTEGER}, #{cron,jdbcType=VARCHAR}, #{tag,jdbcType=VARCHAR}, 
      #{routerStrategy,jdbcType=INTEGER}, #{expiredStrategy,jdbcType=INTEGER}, #{expiredTime,jdbcType=INTEGER}, 
      #{failureStrategy,jdbcType=INTEGER}, #{maxRetryCount,jdbcType=INTEGER}, #{retryCount,jdbcType=INTEGER}, 
      #{failureRetryInterval,jdbcType=INTEGER}, #{timeout,jdbcType=INTEGER}, #{schedulerAddress,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{taskParams,jdbcType=VARCHAR}, #{page,jdbcType=INTEGER}, 
      #{total,jdbcType=INTEGER}, #{parentId,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}, 
      #{executionTime,jdbcType=TIMESTAMP}, #{dispatchTime,jdbcType=TIMESTAMP}, #{realExecutionTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{failedReason,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.horace.cronjob.scheduler.entities.TaskLogEntity">
    insert into t_task_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="appName != null">
        app_name,
      </if>
      <if test="appDesc != null">
        app_desc,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="owner != null">
        owner,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="executorAddress != null">
        executor_address,
      </if>
      <if test="method != null">
        method,
      </if>
      <if test="exeType != null">
        exe_type,
      </if>
      <if test="elapsedTime != null">
        elapsed_time,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="cron != null">
        cron,
      </if>
      <if test="tag != null">
        tag,
      </if>
      <if test="routerStrategy != null">
        router_strategy,
      </if>
      <if test="expiredStrategy != null">
        expired_strategy,
      </if>
      <if test="expiredTime != null">
        expired_time,
      </if>
      <if test="failureStrategy != null">
        failure_strategy,
      </if>
      <if test="maxRetryCount != null">
        max_retry_count,
      </if>
      <if test="retryCount != null">
        retry_count,
      </if>
      <if test="failureRetryInterval != null">
        failure_retry_interval,
      </if>
      <if test="timeout != null">
        timeout,
      </if>
      <if test="schedulerAddress != null">
        scheduler_address,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="taskParams != null">
        task_params,
      </if>
      <if test="page != null">
        page,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="executionTime != null">
        execution_time,
      </if>
      <if test="dispatchTime != null">
        dispatch_time,
      </if>
      <if test="realExecutionTime != null">
        real_execution_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="failedReason != null">
        failed_reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=BIGINT},
      </if>
      <if test="appName != null">
        #{appName,jdbcType=VARCHAR},
      </if>
      <if test="appDesc != null">
        #{appDesc,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=BIGINT},
      </if>
      <if test="executorAddress != null">
        #{executorAddress,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="exeType != null">
        #{exeType,jdbcType=INTEGER},
      </if>
      <if test="elapsedTime != null">
        #{elapsedTime,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="cron != null">
        #{cron,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="routerStrategy != null">
        #{routerStrategy,jdbcType=INTEGER},
      </if>
      <if test="expiredStrategy != null">
        #{expiredStrategy,jdbcType=INTEGER},
      </if>
      <if test="expiredTime != null">
        #{expiredTime,jdbcType=INTEGER},
      </if>
      <if test="failureStrategy != null">
        #{failureStrategy,jdbcType=INTEGER},
      </if>
      <if test="maxRetryCount != null">
        #{maxRetryCount,jdbcType=INTEGER},
      </if>
      <if test="retryCount != null">
        #{retryCount,jdbcType=INTEGER},
      </if>
      <if test="failureRetryInterval != null">
        #{failureRetryInterval,jdbcType=INTEGER},
      </if>
      <if test="timeout != null">
        #{timeout,jdbcType=INTEGER},
      </if>
      <if test="schedulerAddress != null">
        #{schedulerAddress,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="taskParams != null">
        #{taskParams,jdbcType=VARCHAR},
      </if>
      <if test="page != null">
        #{page,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        #{total,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="executionTime != null">
        #{executionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dispatchTime != null">
        #{dispatchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realExecutionTime != null">
        #{realExecutionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="failedReason != null">
        #{failedReason,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.horace.cronjob.scheduler.entities.TaskLogEntityExample" resultType="java.lang.Long">
    select count(*) from t_task_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_task_log
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.tenantId != null">
        tenant_id = #{row.tenantId,jdbcType=BIGINT},
      </if>
      <if test="row.appId != null">
        app_id = #{row.appId,jdbcType=BIGINT},
      </if>
      <if test="row.appName != null">
        app_name = #{row.appName,jdbcType=VARCHAR},
      </if>
      <if test="row.appDesc != null">
        app_desc = #{row.appDesc,jdbcType=VARCHAR},
      </if>
      <if test="row.name != null">
        name = #{row.name,jdbcType=VARCHAR},
      </if>
      <if test="row.owner != null">
        owner = #{row.owner,jdbcType=VARCHAR},
      </if>
      <if test="row.taskId != null">
        task_id = #{row.taskId,jdbcType=BIGINT},
      </if>
      <if test="row.executorAddress != null">
        executor_address = #{row.executorAddress,jdbcType=VARCHAR},
      </if>
      <if test="row.method != null">
        method = #{row.method,jdbcType=VARCHAR},
      </if>
      <if test="row.exeType != null">
        exe_type = #{row.exeType,jdbcType=INTEGER},
      </if>
      <if test="row.elapsedTime != null">
        elapsed_time = #{row.elapsedTime,jdbcType=INTEGER},
      </if>
      <if test="row.version != null">
        version = #{row.version,jdbcType=INTEGER},
      </if>
      <if test="row.cron != null">
        cron = #{row.cron,jdbcType=VARCHAR},
      </if>
      <if test="row.tag != null">
        tag = #{row.tag,jdbcType=VARCHAR},
      </if>
      <if test="row.routerStrategy != null">
        router_strategy = #{row.routerStrategy,jdbcType=INTEGER},
      </if>
      <if test="row.expiredStrategy != null">
        expired_strategy = #{row.expiredStrategy,jdbcType=INTEGER},
      </if>
      <if test="row.expiredTime != null">
        expired_time = #{row.expiredTime,jdbcType=INTEGER},
      </if>
      <if test="row.failureStrategy != null">
        failure_strategy = #{row.failureStrategy,jdbcType=INTEGER},
      </if>
      <if test="row.maxRetryCount != null">
        max_retry_count = #{row.maxRetryCount,jdbcType=INTEGER},
      </if>
      <if test="row.retryCount != null">
        retry_count = #{row.retryCount,jdbcType=INTEGER},
      </if>
      <if test="row.failureRetryInterval != null">
        failure_retry_interval = #{row.failureRetryInterval,jdbcType=INTEGER},
      </if>
      <if test="row.timeout != null">
        timeout = #{row.timeout,jdbcType=INTEGER},
      </if>
      <if test="row.schedulerAddress != null">
        scheduler_address = #{row.schedulerAddress,jdbcType=VARCHAR},
      </if>
      <if test="row.state != null">
        state = #{row.state,jdbcType=INTEGER},
      </if>
      <if test="row.taskParams != null">
        task_params = #{row.taskParams,jdbcType=VARCHAR},
      </if>
      <if test="row.page != null">
        page = #{row.page,jdbcType=INTEGER},
      </if>
      <if test="row.total != null">
        total = #{row.total,jdbcType=INTEGER},
      </if>
      <if test="row.parentId != null">
        parent_id = #{row.parentId,jdbcType=BIGINT},
      </if>
      <if test="row.remark != null">
        remark = #{row.remark,jdbcType=VARCHAR},
      </if>
      <if test="row.executionTime != null">
        execution_time = #{row.executionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.dispatchTime != null">
        dispatch_time = #{row.dispatchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.realExecutionTime != null">
        real_execution_time = #{row.realExecutionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.createTime != null">
        create_time = #{row.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.modifyTime != null">
        modify_time = #{row.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.failedReason != null">
        failed_reason = #{row.failedReason,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_task_log
    set id = #{row.id,jdbcType=BIGINT},
      tenant_id = #{row.tenantId,jdbcType=BIGINT},
      app_id = #{row.appId,jdbcType=BIGINT},
      app_name = #{row.appName,jdbcType=VARCHAR},
      app_desc = #{row.appDesc,jdbcType=VARCHAR},
      name = #{row.name,jdbcType=VARCHAR},
      owner = #{row.owner,jdbcType=VARCHAR},
      task_id = #{row.taskId,jdbcType=BIGINT},
      executor_address = #{row.executorAddress,jdbcType=VARCHAR},
      method = #{row.method,jdbcType=VARCHAR},
      exe_type = #{row.exeType,jdbcType=INTEGER},
      elapsed_time = #{row.elapsedTime,jdbcType=INTEGER},
      version = #{row.version,jdbcType=INTEGER},
      cron = #{row.cron,jdbcType=VARCHAR},
      tag = #{row.tag,jdbcType=VARCHAR},
      router_strategy = #{row.routerStrategy,jdbcType=INTEGER},
      expired_strategy = #{row.expiredStrategy,jdbcType=INTEGER},
      expired_time = #{row.expiredTime,jdbcType=INTEGER},
      failure_strategy = #{row.failureStrategy,jdbcType=INTEGER},
      max_retry_count = #{row.maxRetryCount,jdbcType=INTEGER},
      retry_count = #{row.retryCount,jdbcType=INTEGER},
      failure_retry_interval = #{row.failureRetryInterval,jdbcType=INTEGER},
      timeout = #{row.timeout,jdbcType=INTEGER},
      scheduler_address = #{row.schedulerAddress,jdbcType=VARCHAR},
      state = #{row.state,jdbcType=INTEGER},
      task_params = #{row.taskParams,jdbcType=VARCHAR},
      page = #{row.page,jdbcType=INTEGER},
      total = #{row.total,jdbcType=INTEGER},
      parent_id = #{row.parentId,jdbcType=BIGINT},
      remark = #{row.remark,jdbcType=VARCHAR},
      execution_time = #{row.executionTime,jdbcType=TIMESTAMP},
      dispatch_time = #{row.dispatchTime,jdbcType=TIMESTAMP},
      real_execution_time = #{row.realExecutionTime,jdbcType=TIMESTAMP},
      create_time = #{row.createTime,jdbcType=TIMESTAMP},
      modify_time = #{row.modifyTime,jdbcType=TIMESTAMP},
      failed_reason = #{row.failedReason,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_task_log
    set id = #{row.id,jdbcType=BIGINT},
      tenant_id = #{row.tenantId,jdbcType=BIGINT},
      app_id = #{row.appId,jdbcType=BIGINT},
      app_name = #{row.appName,jdbcType=VARCHAR},
      app_desc = #{row.appDesc,jdbcType=VARCHAR},
      name = #{row.name,jdbcType=VARCHAR},
      owner = #{row.owner,jdbcType=VARCHAR},
      task_id = #{row.taskId,jdbcType=BIGINT},
      executor_address = #{row.executorAddress,jdbcType=VARCHAR},
      method = #{row.method,jdbcType=VARCHAR},
      exe_type = #{row.exeType,jdbcType=INTEGER},
      elapsed_time = #{row.elapsedTime,jdbcType=INTEGER},
      version = #{row.version,jdbcType=INTEGER},
      cron = #{row.cron,jdbcType=VARCHAR},
      tag = #{row.tag,jdbcType=VARCHAR},
      router_strategy = #{row.routerStrategy,jdbcType=INTEGER},
      expired_strategy = #{row.expiredStrategy,jdbcType=INTEGER},
      expired_time = #{row.expiredTime,jdbcType=INTEGER},
      failure_strategy = #{row.failureStrategy,jdbcType=INTEGER},
      max_retry_count = #{row.maxRetryCount,jdbcType=INTEGER},
      retry_count = #{row.retryCount,jdbcType=INTEGER},
      failure_retry_interval = #{row.failureRetryInterval,jdbcType=INTEGER},
      timeout = #{row.timeout,jdbcType=INTEGER},
      scheduler_address = #{row.schedulerAddress,jdbcType=VARCHAR},
      state = #{row.state,jdbcType=INTEGER},
      task_params = #{row.taskParams,jdbcType=VARCHAR},
      page = #{row.page,jdbcType=INTEGER},
      total = #{row.total,jdbcType=INTEGER},
      parent_id = #{row.parentId,jdbcType=BIGINT},
      remark = #{row.remark,jdbcType=VARCHAR},
      execution_time = #{row.executionTime,jdbcType=TIMESTAMP},
      dispatch_time = #{row.dispatchTime,jdbcType=TIMESTAMP},
      real_execution_time = #{row.realExecutionTime,jdbcType=TIMESTAMP},
      create_time = #{row.createTime,jdbcType=TIMESTAMP},
      modify_time = #{row.modifyTime,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.horace.cronjob.scheduler.entities.TaskLogEntity">
    update t_task_log
    <set>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=BIGINT},
      </if>
      <if test="appName != null">
        app_name = #{appName,jdbcType=VARCHAR},
      </if>
      <if test="appDesc != null">
        app_desc = #{appDesc,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="owner != null">
        owner = #{owner,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=BIGINT},
      </if>
      <if test="executorAddress != null">
        executor_address = #{executorAddress,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="exeType != null">
        exe_type = #{exeType,jdbcType=INTEGER},
      </if>
      <if test="elapsedTime != null">
        elapsed_time = #{elapsedTime,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="cron != null">
        cron = #{cron,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="routerStrategy != null">
        router_strategy = #{routerStrategy,jdbcType=INTEGER},
      </if>
      <if test="expiredStrategy != null">
        expired_strategy = #{expiredStrategy,jdbcType=INTEGER},
      </if>
      <if test="expiredTime != null">
        expired_time = #{expiredTime,jdbcType=INTEGER},
      </if>
      <if test="failureStrategy != null">
        failure_strategy = #{failureStrategy,jdbcType=INTEGER},
      </if>
      <if test="maxRetryCount != null">
        max_retry_count = #{maxRetryCount,jdbcType=INTEGER},
      </if>
      <if test="retryCount != null">
        retry_count = #{retryCount,jdbcType=INTEGER},
      </if>
      <if test="failureRetryInterval != null">
        failure_retry_interval = #{failureRetryInterval,jdbcType=INTEGER},
      </if>
      <if test="timeout != null">
        timeout = #{timeout,jdbcType=INTEGER},
      </if>
      <if test="schedulerAddress != null">
        scheduler_address = #{schedulerAddress,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="taskParams != null">
        task_params = #{taskParams,jdbcType=VARCHAR},
      </if>
      <if test="page != null">
        page = #{page,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="executionTime != null">
        execution_time = #{executionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dispatchTime != null">
        dispatch_time = #{dispatchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realExecutionTime != null">
        real_execution_time = #{realExecutionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="failedReason != null">
        failed_reason = #{failedReason,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.horace.cronjob.scheduler.entities.TaskLogEntity">
    update t_task_log
    set tenant_id = #{tenantId,jdbcType=BIGINT},
      app_id = #{appId,jdbcType=BIGINT},
      app_name = #{appName,jdbcType=VARCHAR},
      app_desc = #{appDesc,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      owner = #{owner,jdbcType=VARCHAR},
      task_id = #{taskId,jdbcType=BIGINT},
      executor_address = #{executorAddress,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      exe_type = #{exeType,jdbcType=INTEGER},
      elapsed_time = #{elapsedTime,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      cron = #{cron,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR},
      router_strategy = #{routerStrategy,jdbcType=INTEGER},
      expired_strategy = #{expiredStrategy,jdbcType=INTEGER},
      expired_time = #{expiredTime,jdbcType=INTEGER},
      failure_strategy = #{failureStrategy,jdbcType=INTEGER},
      max_retry_count = #{maxRetryCount,jdbcType=INTEGER},
      retry_count = #{retryCount,jdbcType=INTEGER},
      failure_retry_interval = #{failureRetryInterval,jdbcType=INTEGER},
      timeout = #{timeout,jdbcType=INTEGER},
      scheduler_address = #{schedulerAddress,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      task_params = #{taskParams,jdbcType=VARCHAR},
      page = #{page,jdbcType=INTEGER},
      total = #{total,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      execution_time = #{executionTime,jdbcType=TIMESTAMP},
      dispatch_time = #{dispatchTime,jdbcType=TIMESTAMP},
      real_execution_time = #{realExecutionTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      failed_reason = #{failedReason,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.horace.cronjob.scheduler.entities.TaskLogEntity">
    update t_task_log
    set tenant_id = #{tenantId,jdbcType=BIGINT},
      app_id = #{appId,jdbcType=BIGINT},
      app_name = #{appName,jdbcType=VARCHAR},
      app_desc = #{appDesc,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      owner = #{owner,jdbcType=VARCHAR},
      task_id = #{taskId,jdbcType=BIGINT},
      executor_address = #{executorAddress,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      exe_type = #{exeType,jdbcType=INTEGER},
      elapsed_time = #{elapsedTime,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      cron = #{cron,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR},
      router_strategy = #{routerStrategy,jdbcType=INTEGER},
      expired_strategy = #{expiredStrategy,jdbcType=INTEGER},
      expired_time = #{expiredTime,jdbcType=INTEGER},
      failure_strategy = #{failureStrategy,jdbcType=INTEGER},
      max_retry_count = #{maxRetryCount,jdbcType=INTEGER},
      retry_count = #{retryCount,jdbcType=INTEGER},
      failure_retry_interval = #{failureRetryInterval,jdbcType=INTEGER},
      timeout = #{timeout,jdbcType=INTEGER},
      scheduler_address = #{schedulerAddress,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      task_params = #{taskParams,jdbcType=VARCHAR},
      page = #{page,jdbcType=INTEGER},
      total = #{total,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      execution_time = #{executionTime,jdbcType=TIMESTAMP},
      dispatch_time = #{dispatchTime,jdbcType=TIMESTAMP},
      real_execution_time = #{realExecutionTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="map">
    insert into t_task_log
    (id, tenant_id, app_id, app_name, app_desc, name, owner, task_id, executor_address, 
      method, exe_type, elapsed_time, version, cron, tag, router_strategy, expired_strategy, 
      expired_time, failure_strategy, max_retry_count, retry_count, failure_retry_interval, 
      timeout, scheduler_address, state, task_params, page, total, parent_id, remark, 
      execution_time, dispatch_time, real_execution_time, create_time, modify_time, failed_reason
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.tenantId,jdbcType=BIGINT}, #{item.appId,jdbcType=BIGINT}, 
        #{item.appName,jdbcType=VARCHAR}, #{item.appDesc,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, 
        #{item.owner,jdbcType=VARCHAR}, #{item.taskId,jdbcType=BIGINT}, #{item.executorAddress,jdbcType=VARCHAR}, 
        #{item.method,jdbcType=VARCHAR}, #{item.exeType,jdbcType=INTEGER}, #{item.elapsedTime,jdbcType=INTEGER}, 
        #{item.version,jdbcType=INTEGER}, #{item.cron,jdbcType=VARCHAR}, #{item.tag,jdbcType=VARCHAR}, 
        #{item.routerStrategy,jdbcType=INTEGER}, #{item.expiredStrategy,jdbcType=INTEGER}, 
        #{item.expiredTime,jdbcType=INTEGER}, #{item.failureStrategy,jdbcType=INTEGER}, 
        #{item.maxRetryCount,jdbcType=INTEGER}, #{item.retryCount,jdbcType=INTEGER}, #{item.failureRetryInterval,jdbcType=INTEGER}, 
        #{item.timeout,jdbcType=INTEGER}, #{item.schedulerAddress,jdbcType=VARCHAR}, #{item.state,jdbcType=INTEGER}, 
        #{item.taskParams,jdbcType=VARCHAR}, #{item.page,jdbcType=INTEGER}, #{item.total,jdbcType=INTEGER}, 
        #{item.parentId,jdbcType=BIGINT}, #{item.remark,jdbcType=VARCHAR}, #{item.executionTime,jdbcType=TIMESTAMP}, 
        #{item.dispatchTime,jdbcType=TIMESTAMP}, #{item.realExecutionTime,jdbcType=TIMESTAMP}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.modifyTime,jdbcType=TIMESTAMP}, #{item.failedReason,jdbcType=LONGVARCHAR}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into t_task_log (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'tenant_id'.toString() == column.value">
          #{item.tenantId,jdbcType=BIGINT}
        </if>
        <if test="'app_id'.toString() == column.value">
          #{item.appId,jdbcType=BIGINT}
        </if>
        <if test="'app_name'.toString() == column.value">
          #{item.appName,jdbcType=VARCHAR}
        </if>
        <if test="'app_desc'.toString() == column.value">
          #{item.appDesc,jdbcType=VARCHAR}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'owner'.toString() == column.value">
          #{item.owner,jdbcType=VARCHAR}
        </if>
        <if test="'task_id'.toString() == column.value">
          #{item.taskId,jdbcType=BIGINT}
        </if>
        <if test="'executor_address'.toString() == column.value">
          #{item.executorAddress,jdbcType=VARCHAR}
        </if>
        <if test="'method'.toString() == column.value">
          #{item.method,jdbcType=VARCHAR}
        </if>
        <if test="'exe_type'.toString() == column.value">
          #{item.exeType,jdbcType=INTEGER}
        </if>
        <if test="'elapsed_time'.toString() == column.value">
          #{item.elapsedTime,jdbcType=INTEGER}
        </if>
        <if test="'version'.toString() == column.value">
          #{item.version,jdbcType=INTEGER}
        </if>
        <if test="'cron'.toString() == column.value">
          #{item.cron,jdbcType=VARCHAR}
        </if>
        <if test="'tag'.toString() == column.value">
          #{item.tag,jdbcType=VARCHAR}
        </if>
        <if test="'router_strategy'.toString() == column.value">
          #{item.routerStrategy,jdbcType=INTEGER}
        </if>
        <if test="'expired_strategy'.toString() == column.value">
          #{item.expiredStrategy,jdbcType=INTEGER}
        </if>
        <if test="'expired_time'.toString() == column.value">
          #{item.expiredTime,jdbcType=INTEGER}
        </if>
        <if test="'failure_strategy'.toString() == column.value">
          #{item.failureStrategy,jdbcType=INTEGER}
        </if>
        <if test="'max_retry_count'.toString() == column.value">
          #{item.maxRetryCount,jdbcType=INTEGER}
        </if>
        <if test="'retry_count'.toString() == column.value">
          #{item.retryCount,jdbcType=INTEGER}
        </if>
        <if test="'failure_retry_interval'.toString() == column.value">
          #{item.failureRetryInterval,jdbcType=INTEGER}
        </if>
        <if test="'timeout'.toString() == column.value">
          #{item.timeout,jdbcType=INTEGER}
        </if>
        <if test="'scheduler_address'.toString() == column.value">
          #{item.schedulerAddress,jdbcType=VARCHAR}
        </if>
        <if test="'state'.toString() == column.value">
          #{item.state,jdbcType=INTEGER}
        </if>
        <if test="'task_params'.toString() == column.value">
          #{item.taskParams,jdbcType=VARCHAR}
        </if>
        <if test="'page'.toString() == column.value">
          #{item.page,jdbcType=INTEGER}
        </if>
        <if test="'total'.toString() == column.value">
          #{item.total,jdbcType=INTEGER}
        </if>
        <if test="'parent_id'.toString() == column.value">
          #{item.parentId,jdbcType=BIGINT}
        </if>
        <if test="'remark'.toString() == column.value">
          #{item.remark,jdbcType=VARCHAR}
        </if>
        <if test="'execution_time'.toString() == column.value">
          #{item.executionTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'dispatch_time'.toString() == column.value">
          #{item.dispatchTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'real_execution_time'.toString() == column.value">
          #{item.realExecutionTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'modify_time'.toString() == column.value">
          #{item.modifyTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'failed_reason'.toString() == column.value">
          #{item.failedReason,jdbcType=LONGVARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>