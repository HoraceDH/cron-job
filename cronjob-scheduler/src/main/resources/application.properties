############# 调度器配置 #############
# 用于标识实例的唯一性
server.id=1
# 调度器提前调度时间，默认3000毫秒，用作在一些网络等延迟场景下提前调度，任务会先放入执行器内存队列，时间到达时才会真正执行
schedulers.beforeInterval=3000
# 调度器超时时间，调度器多久没心跳时则超时，单位毫秒
schedulers.timeout=30000
# 调度器每次从任务日志加载到内存队列的任务数量，如果任务量大，1秒内调度任务数多，则可以调高此值增加吞吐量，如果任务量少，此值过大会导致其他调度器拿不到调度任务，存在调度倾斜的问题
schedulers.taskQueueCount=10
# 调度器预生成任务日志的时候，只预生成生成配置值分钟以内的任务日志
schedulers.taskPreGenerationMaxTimeMinutes=3
# 任务日志、执行器记录、统计记录最大保留的天数
taskLog.maxRetainDays=5
# 管理后台与调度器通信的签名Key
manager.signKey=6b540a079699b196d678af5801b79b4e
# 执行器与调度器通信的签名Key
executor.signKey=7d890a079948b196756rtf5452d2245t
############# 调度器配置 #############

############# 执行器配置 #############
# 执行器的超时时间，超过这个时间没有心跳则认为是下线
executor.timeout=30000
# 如果所有的执行器离线太久，则自动停止应用，避免无意义的调度，单位分钟
executor.autoStopAppMinutes=15
############# 执行器配置 #############

############# 数据源配置 #############
database.driverClassName=com.mysql.cj.jdbc.Driver
database.url=jdbc:mysql://localhost:3306/cron-job?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true
database.username=horace
database.password=SGJIWkjfdsof923847
# 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
database.initialSize=5
# 连接池最大连接数
database.maxActive=20
# 连接超时时间，毫秒
database.connectTimeout=3000
# 读取超时时间，毫秒
database.socketTimeout=5000
############# 数据源配置 #############

############# Tomcat配置 #############
# Tomcat服务配置
server.port=9527
# 当所有可能的请求处理线程都在使用时，传入连接请求的最大队列长度。
server.tomcat.accept-count=500
# 服务器在任何给定时间接受和处理的最大连接数。一旦达到限制，操作系统仍然可以根据“acceptCount”属性接受连接。
server.tomcat.max-connections=8192
# 任何HTTP post请求中表单内容的最大大小。
server.tomcat.max-http-form-post-size=2MB
# 最大的工作线程数
server.tomcat.threads.max=600
# 最小工作线程数
server.tomcat.threads.min-spare=10
############# Tomcat配置 #############

############# 告警配置 #############
# 调度平台域名，用于告警卡片的跳转
domain=http://localhost:8000
# Lark、飞书的配置
lark.appId=cli_a752501b970c101c
lark.appSecret=WKxCe7x0EgXlmfyaJq6lAcb5S4M6ndnF
############# 告警配置 #############
